class Solution {
  public:
    Node* sortedInsert(Node* head, int data) {
        Node* newNode = new Node(data);
        
      
        if (!head) {
            newNode->next = newNode;
            return newNode;
        }
        
        Node* curr = head;

        if (data <= head->data) {
         
            while (curr->next != head) {
                curr = curr->next;
            }
         
            curr->next = newNode;
            newNode->next = head;
            head = newNode; 
            return head;
        }
        
       
        curr = head;
        while (curr->next != head && curr->next->data < data) {
            curr = curr->next;
        }
        
       
        newNode->next = curr->next;
        curr->next = newNode;
        
        return head;
    }
};
